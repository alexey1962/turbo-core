@use "sass:math";
@import "fonts";

a {
  color: inherit;
  text-decoration: none;
}

$fontFamily: "Inter";
$fontSize: rem(16);

$mainColor: #000;
$mainDarkColor: #07040C;
$mainOrange: #F35A05;
$minWidth: 320;
$maxWidth: 1920;
$maxWidthContainer: 1280;
$containerPadding: 20;
$responsiveType: 1;

$containerWidth: $maxWidthContainer + $containerPadding;

$pc: em($containerWidth);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSmall: em(479.98);

* {
  min-height: 0;
  min-width: 0;
}

html {
  font-size: $fontSize;
}

body {
  font-weight: 400;
  font-family: $fontFamily;

  .lock & {
    overflow: hidden;
    touch-action: none;
  }
}

.container {
  max-width: 1280px !important;
  margin: 0 auto;
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

h1,h2,h3,h4,h5,h6 {
  margin: 0;
  font-weight: normal;
  font-size: inherit;
}

p {
  margin: 0;
}

.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;

  .loaded & {}

  > main {
    flex: 1 1 auto;
  }
}

.btn {
  display: inline-block;
  background-color: $mainOrange;
  width: 220px;
  height: 60px;
  line-height: 60px;
  border-radius: 30px;
  
  color: #fff;
  text-align: center;
  font-family: 'Ubuntu', sans-serif;
  font-weight: 700;
  text-transform: uppercase;
}

@if($responsiveType==1) {
  [class*="__container"] {
    @if($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }

    @if($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }

}

@else {
  [class*="__container"] {
      margin: 0 auto;

  @if($maxWidthContainer>0) {
    max-width: rem($maxWidthContainer);
    box-sizing: content-box;
  }

  @else {
      @if($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
  }

  @media(max-width: $pc) {
    max-width: rem(970);
  }

  @media(max-width: $tablet) {
    max-width: rem(750);
  }

  @media(max-width: $mobile) {
    max-width: none;

      @if($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

@import "normalize";
@import "mixins";

@import "header";
@import "page";